{
  "version": 3,
  "sources": ["src/main.ts"],
  "sourcesContent": ["import { Plugin, App, MarkdownPostProcessorContext, PluginSettingTab, Setting, FileSystemAdapter } from 'obsidian';\n\ninterface MyPluginSettings {\n    iframeHeight: string;\n}\n\nconst DEFAULT_SETTINGS: MyPluginSettings = {\n    iframeHeight: '500'\n};\n\nexport default class IframeRenderer extends Plugin {\n    settings: MyPluginSettings = DEFAULT_SETTINGS;\n\n    async onload() {\n        await this.loadSettings();\n        \n        this.registerMarkdownPostProcessor((element: HTMLElement) => {\n            this.processIframes(element);\n        });\n\n        this.addSettingTab(new IframeSettingsTab(this.app, this));\n    }\n\n    private processIframes(element: HTMLElement) {\n        const iframes = element.querySelectorAll('iframe');\n        iframes.forEach(iframe => {\n            this.fixIframeSrc(iframe);\n            iframe.style.height = this.settings.iframeHeight + 'px';\n        });\n    }\n\n    private fixIframeSrc(iframe: HTMLIFrameElement) {\n        const src = iframe.getAttribute('src');\n        if (src && !src.startsWith('http') && !src.startsWith('data')) {\n            const adapter = this.app.vault.adapter;\n            if (adapter instanceof FileSystemAdapter) {\n                const fullPath = adapter.getFullPath(src);\n                iframe.src = `app://local/${encodeURIComponent(fullPath)}`;\n                iframe.setAttribute('sandbox', 'allow-same-origin allow-scripts');\n            }\n        }\n    }\n\n    async loadSettings() {\n        this.settings = { ...DEFAULT_SETTINGS, ...(await this.loadData()) };\n    }\n\n    async saveSettings() {\n        await this.saveData(this.settings);\n    }\n}\n\nclass IframeSettingsTab extends PluginSettingTab {\n    constructor(app: App, private plugin: IframeRenderer) {\n        super(app, plugin);\n    }\n\n    display(): void {\n        const { containerEl } = this;\n        containerEl.empty();\n        \n        containerEl.createEl('h2', { text: 'IFrame Renderer Settings' });\n        \n        new Setting(containerEl)\n            .setName('Default height')\n            .setDesc('Height in pixels (e.g. 500)')\n            .addText(text => text\n                .setPlaceholder('500')\n                .setValue(this.plugin.settings.iframeHeight)\n                .onChange(async (value) => {\n                    this.plugin.settings.iframeHeight = value;\n                    await this.plugin.saveSettings();\n                }));\n    }\n}"],
  "mappings": ";AAAA,SAAS,QAA2C,kBAAkB,SAAS,yBAAyB;AAMxG,IAAM,mBAAqC;AAAA,EACvC,cAAc;AAClB;AAEA,IAAqB,iBAArB,cAA4C,OAAO;AAAA,EAAnD;AAAA;AACI,oBAA6B;AAAA;AAAA,EAE7B,MAAM,SAAS;AACX,UAAM,KAAK,aAAa;AAExB,SAAK,8BAA8B,CAAC,YAAyB;AACzD,WAAK,eAAe,OAAO;AAAA,IAC/B,CAAC;AAED,SAAK,cAAc,IAAI,kBAAkB,KAAK,KAAK,IAAI,CAAC;AAAA,EAC5D;AAAA,EAEQ,eAAe,SAAsB;AACzC,UAAM,UAAU,QAAQ,iBAAiB,QAAQ;AACjD,YAAQ,QAAQ,YAAU;AACtB,WAAK,aAAa,MAAM;AACxB,aAAO,MAAM,SAAS,KAAK,SAAS,eAAe;AAAA,IACvD,CAAC;AAAA,EACL;AAAA,EAEQ,aAAa,QAA2B;AAC5C,UAAM,MAAM,OAAO,aAAa,KAAK;AACrC,QAAI,OAAO,CAAC,IAAI,WAAW,MAAM,KAAK,CAAC,IAAI,WAAW,MAAM,GAAG;AAC3D,YAAM,UAAU,KAAK,IAAI,MAAM;AAC/B,UAAI,mBAAmB,mBAAmB;AACtC,cAAM,WAAW,QAAQ,YAAY,GAAG;AACxC,eAAO,MAAM,eAAe,mBAAmB,QAAQ,CAAC;AACxD,eAAO,aAAa,WAAW,iCAAiC;AAAA,MACpE;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,MAAM,eAAe;AACjB,SAAK,WAAW,EAAE,GAAG,kBAAkB,GAAI,MAAM,KAAK,SAAS,EAAG;AAAA,EACtE;AAAA,EAEA,MAAM,eAAe;AACjB,UAAM,KAAK,SAAS,KAAK,QAAQ;AAAA,EACrC;AACJ;AAEA,IAAM,oBAAN,cAAgC,iBAAiB;AAAA,EAC7C,YAAY,KAAkB,QAAwB;AAClD,UAAM,KAAK,MAAM;AADS;AAAA,EAE9B;AAAA,EAEA,UAAgB;AACZ,UAAM,EAAE,YAAY,IAAI;AACxB,gBAAY,MAAM;AAElB,gBAAY,SAAS,MAAM,EAAE,MAAM,2BAA2B,CAAC;AAE/D,QAAI,QAAQ,WAAW,EAClB,QAAQ,gBAAgB,EACxB,QAAQ,6BAA6B,EACrC,QAAQ,UAAQ,KACZ,eAAe,KAAK,EACpB,SAAS,KAAK,OAAO,SAAS,YAAY,EAC1C,SAAS,OAAO,UAAU;AACvB,WAAK,OAAO,SAAS,eAAe;AACpC,YAAM,KAAK,OAAO,aAAa;AAAA,IACnC,CAAC,CAAC;AAAA,EACd;AACJ;",
  "names": []
}
